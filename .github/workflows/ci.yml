# Name of our automated workflow.
name: Docker CI/CD

# Events that trigger this workflow.
on:
  # Triggered when code is pushed to the "main" or "develop" branches or when a new version tag is added.
  push:
    paths-ignore:
      - '**.md'          # Ignore all markdown files
      - './docs/**'      # Ignore all files in the 'docs' folder
      - './img/**'       # Ignore all files in the 'img' folder
      - './Makefile'     # Ignore the Makefile
    branches:
      - main
      - develop
    tags:
      - 'v*.*.*'         # E.g., v1.2.3

  # Triggered when a pull request is made to the "main" or "release/*" branches.
  pull_request:
    paths-ignore:
      - '**.md'          # Ignore all markdown files
      - './docs/**'      # Ignore all files in the 'docs' folder
      - './img/**'       # Ignore all files in the 'img' folder
      - './Makefile'     # Ignore the Makefile
    branches:
      - main
      - release/*

# Actual tasks to be performed.
jobs:
  docker:
    # This job runs on a virtual machine with the latest Ubuntu OS.
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the current repository.
      - name: Checkout Code
        uses: actions/checkout@v4

      # Extract the name of this repository, removing any "docker-" prefix.
      - name: Extract Repo Name
        id: repo_name
        run: echo "::set-output name=image_name::$(echo ${{ github.repository }} | sed -e 's#.*/docker-##')"

      # Prepare Docker for more efficient builds with Buildx.
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      # Log in to DockerHub with secret username and password.
      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Define the name and tags for our Docker image.
      - name: Setup Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo_name.outputs.image_name }}
          tags: |
            type=semver,pattern={{version}},value=latest
            type=semver,pattern={{version}}
            type=ref,event=branch,value=latest
            type=sha,format=short

      # Build and push the Docker image to DockerHub.
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          # We push the image only if it's not a pull request, or if it's a new version tag.
          push: ${{ github.event_name != 'pull_request' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            APP_VERSION=${{ github.ref }}
